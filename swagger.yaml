swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get all transactions
      description: API to retrieve all transactions for the current month, grouped by account
      parameters:
        - in: header
          name: token
          description: Authentication Token
          required: true
          type: string
        - in: body
          name: body
          description: The account number, First day of the month, Last day of the month
          required: true
          schema:
            $ref: '#/definitions/GetAllTransactions'
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '403':
           description: Unauthorized
        '500':
          description: Internal Server Error
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction by ID
      description: API to retrieve a single transaction by ID
      parameters:
        - in: header
          name: token
          description: Authentication Token
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to retrieve
      produces:
        - application/json
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '403':
           description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/category/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update category
      description: API to update the category of a transaction
      parameters:
        - in: header
          name: token
          description: Authentication Token
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          description: Category update payload
          schema:
            $ref: '#/definitions/CategoryUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Category updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '403':
           description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  /transactions/note/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update note
      description: API to update the note of a transaction
      parameters:
        - in: header
          name: token
          description: Authentication Token
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to update
        - in: body
          name: body
          required: true
          description: Note update payload
          schema:
            $ref: '#/definitions/NoteUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Note updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '403':
           description: Unauthorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      name:
        type: string
      date:
        type: string
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
      category:
        type: string
      note:
        type: string
  GetAllTransactions:
    type: object
    properties:
      accountNumber:
        type: string
      firstDay:
        type: string
      lastDay:
        type: string
  CategoryUpdate:
    type: object
    properties:
      category:
        type: string
  NoteUpdate:
    type: object
    properties:
      note:
        type: string